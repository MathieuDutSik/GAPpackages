GramMat:=[ [ 3, 0, 0, 0, 0, 0 ], [ 0, 3, 0, 0, 0, 0 ], [ 0, 0, 3, 0, 0,
0 ], [ 0, 0, 0, 3, 0, 0 ],[ 0, 0, 0, 0, 4, -2 ], [ 0, 0, 0, 0, -2, 4 ] ];
# cslist contains the translation parts of point group representatives:
cslist:=
[ [ 1, -1/2, -1/2, -1/2, 17/6, -1, 1 ], [ 1, -1/2, 1/2, -1/2, 7/6, 2, 1 ],
  [ 1, -1/2, -1/2, -1/2, 1/2, 0, 0 ], [ 1, -1/2, 1, 1/2, 4/3, -1, 0 ], [
1, -1/2, 0, 1/2, 2/3, 1, 1 ],
  [ 1, -1/2, 0, 1/2, 3, 0, -1 ], [ 1, 0, 1/2, -1/2, 1/3, 0, 0 ], [ 1, 0,
1/2, -1/2, 8/3, 2, 1 ],
  [ 1, 0, -1/2, -1/2, 2, 1, -1 ], [ 1, 0, 1, 1/2, 17/6, -1, 0 ], [ 1, 0,
0, 1/2, 13/6, 1, 1 ],
  [ 1, 0, 0, -1/2, 5/2, 0, -2 ], [ 1, 0, 0, 1/2, 11/6, -2/3, -1/3 ], [
1, 0, 0, -1/2, 1/6, 4/3, 2/3 ],
  [ 1, 0, 0, -1/2, 5/2, 1/3, -4/3 ], [ 1, 0, 0, 0, 7/3, -2/3, 2/3 ], [
1, 0, 0, 1, 5/3, 4/3, 5/3 ],
  [ 1, 0, 0, 0, 0, 1/3, -1/3 ], [ 1, 0, -1/2, -1/2, 10/3, -2/3, -1/3 ],
[ 1, 0, 1/2, 1/2, 8/3, 4/3, 2/3 ]
    , [ 1, 0, -1/2, -1/2, 1, 1/3, -4/3 ], [ 1, 0, -1/2, 0, 5/6, -2/3, 2/3 ],
  [ 1, 0, -1/2, 0, 19/6, 4/3, 5/3 ], [ 1, 0, -1/2, -1, 3/2, 1/3, -1/3 ],
  [ 1, -1, -1/2, 0, 17/6, -4/3, 1/3 ], [ 1, 0, -1/2, 0, 13/6, 2/3, 4/3 ],
  [ 1, 0, 1/2, 0, 5/2, -1/3, -5/3 ], [ 1, -1/2, 1/2, 0, 1/3, -1/3, 1/3 ],
  [ 1, -1/2, 1/2, 0, 8/3, 5/3, 4/3 ], [ 1, 1/2, 1/2, 0, 2, 2/3, -2/3 ],
  [ 1, -1, -1/2, -1/2, 4/3, -4/3, 1/3 ], [ 1, 0, -1/2, -1/2, 2/3, 2/3,
4/3 ],
  [ 1, 0, -1/2, -1/2, 3, -1/3, -2/3 ], [ 1, 1/2, 1/2, -1/2, 17/6, -1/3,
1/3 ],
  [ 1, -1/2, 1/2, -1/2, 7/6, 5/3, 4/3 ], [ 1, 1/2, 1/2, -1/2, 1/2, 2/3,
-2/3 ],
  [ 1, 0, 0, 0, 7/3, -1/3, 1/3 ], [ 1, 1, 0, 0, 5/3, 5/3, 4/3 ], [ 1, 0,
0, 0, 0, 2/3, -2/3 ],
  [ 1, 1/2, 0, 0, 11/6, -4/3, 1/3 ], [ 1, -1/2, 0, 0, 1/6, 2/3, 4/3 ], [
1, -1/2, 0, 0, 5/2, -1/3, -2/3 ]
    , [ 1, 0, 0, 1/2, 5/6, -1/3, 1/3 ], [ 1, 0, 0, 1/2, 19/6, 5/3, 4/3 ],
  [ 1, -1, 0, 1/2, 3/2, 2/3, -2/3 ], [ 1, -1/2, 0, 1/2, 10/3, -4/3, 1/3 ],
  [ 1, 1/2, 0, -1/2, 8/3, 5/3, 1/3 ], [ 1, -1/2, 0, 1/2, 1, -1/3, -2/3 ],
  [ 1, -1/2, 0, -1/2, 1/3, -2/3, 2/3 ], [ 1, -1/2, 0, -1/2, 8/3, 4/3, 5/3 ],
  [ 1, -1/2, 0, 1/2, 2, 1/3, -1/3 ], [ 1, 1/2, 0, -1, 17/6, -2/3, -1/3 ],
  [ 1, 1/2, 0, 0, 13/6, 4/3, 2/3 ], [ 1, -1/2, 0, 0, 5/2, -2/3, -4/3 ],
  [ 1, -1/2, 1/2, 1/2, 17/6, -2/3, 2/3 ], [ 1, -1/2, 1/2, -1/2, 7/6,
4/3, 5/3 ],
  [ 1, -1/2, 1/2, 1/2, 1/2, 1/3, -1/3 ], [ 1, 1/2, 1/2, -1, 4/3, -2/3,
-1/3 ],
  [ 1, 1/2, 1/2, 0, 2/3, 4/3, 2/3 ], [ 1, 1/2, 1/2, 0, 3, 1/3, -4/3 ], [
1, 1/2, 1/2, 0, 10/3, -1, 0 ],
  [ 1, -1/2, -1/2, 0, 8/3, 1, 1 ], [ 1, 1/2, 1/2, 0, 1, 0, -1 ], [ 1,
1/2, 0, 0, 5/6, 0, 0 ],
  [ 1, 1/2, 0, 0, 19/6, 2, 1 ], [ 1, 1/2, 1, 0, 3/2, 1, -1 ], [ 1, 0,
-1/2, 0, 11/6, -1, 0 ],
  [ 1, 0, 1/2, 0, 1/6, 1, 1 ], [ 1, 0, 1/2, 0, 5/2, 0, -1 ], [ 1, 0, 0,
0, 7/3, 0, 0 ],
  [ 1, 0, -1, 0, 5/3, 1, 2 ], [ 1, 0, 0, 0, 0, 0, 0 ] ];

MatrixGRP:=Method2AutomorphismLattice(GramMat);
AffineGroup:=Group(List(GeneratorsOfGroup(MatrixGRP),
x->FuncCreateBigMatrix(ListWithIdenticalEntries(Length(GramMat),0), x)));
ListCosets:=List(cslist,PeriodicVectorMod1);
ListFunc:=Periodic_DelaunayComputationStandardFunctions(GramMat,
AffineGroup, ListCosets);
