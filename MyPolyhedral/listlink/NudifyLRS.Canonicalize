#!/usr/bin/perl -w

# This script takes the output of glrs
# and create a file of canonicalized representent
# then sort and uniq make the thing.

$uu=scalar(@ARGV);
if ($uu ne 2)
{
    print "NudifyLRS.Canonicalize [GroupFile] [ExtFile] < [File]\n";
    print "\n";
    print "It canonicalize lists lists of lines\n";
    print "into small file\n";
    die;
}
$GrpFile=$ARGV[0];
$ExtFile=$ARGV[1];

open(INFILE, $GrpFile) or die "impossible to open ".$GrpFile;
@GRP=<INFILE>;
close(INFILE);

open(INFILE, $ExtFile) or die "impossible to open ".$ExtFile;
@EXT=<INFILE>;
close(INFILE);

sub Representation(@)
{
    my (@LEL)=@_;
    my $i;
    my $chn;
    $chn="";
    for ($i=1; $i<=scalar(@LEL); $i++)
    {
	$chn=$chn.$LEL[$i-1];
    }
    return $chn;
}


sub ReadOneLine($)
{
    my ($ssl) =@_;
    @LINC=();
    @facet=split(" ", $ssl);
    for ($iExt=1; $iExt<=scalar(@EXT); $iExt++)
    {
	@ext=split(" ", $EXT[$iExt-1]);
	$Sum=0;
	for ($iCol=1; $iCol<=scalar(@ext); $iCol++)
	{
	    $Sum=$Sum+$ext[$iCol-1]*$facet[$iCol-1];
	}
	if ($Sum eq 0)
	{
	    $LINC[scalar(@LINC)]=1;
	}
	else
	{
	    $LINC[scalar(@LINC)]=0;
	}
    }
    $Repr=Representation(@LINC);
    for ($iElt=1; $iElt<=scalar(@GRP); $iElt++)
    {
	@elt=split(" ", $GRP[$iElt-1]);
	@NEWLINC=();
	for ($iInc=1; $iInc<=scalar(@LINC); $iInc++)
	{
	    $NEWLINC[$iInc-1]=$LINC[$elt[$iInc-1]-1];
	}
	$Cand=Representation(@NEWLINC);
	if ($Cand< $Repr)
	{
	    $Repr=$Cand;
	}
    }
    @SEL=split("", $Repr);
    for ($i=1; $i<=scalar(@SEL); $i++)
    {
	if ($SEL[$i-1] eq 1)
	{
	    print " ".$i;
	}
    }
    print "\n";
#    die;
}

while(<STDIN>)
{
    $let=$_;
    @U=split("", $let);
    if (($U[0] ne "b") and ($U[0] ne "e") and ($U[0] ne "H") and ($let ne "\n"))
    {
	ReadOneLine($let);
    }
}
