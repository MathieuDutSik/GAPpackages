#!/usr/bin/perl -w

# We take a NUDE list of extreme rays or facets
# and return a list without fractions.
# This is important to make things easier to read and to
# make perl able to select between facets and extreme rays.

# This is a bad hack to implement a modulo operation

sub CalcMod($$)
{
    my ($i, $j) = @_;
    my $quot;
    my $res;
    $quot=int($i/$j);
    $res=$i-$quot*$j;
    return $res;
}

# This implement a Greatest Common Divisor 
# using the euclide algorithm

sub gcd($$)
{
    my ($i, $j) =@_;
    if ($i eq 0)
    {
	if ($j>0)
	{	    
	    return $j;
	}
	else
	{
	    if ($j eq 0)
	    {
		return 0;
	    }
	    else
	    {
		return -$j;
	    }
	}
    }
    if ($j eq 0)
    {
	if ($i > 0)
	{
	    return $i;
	}
	else
	{
	    if ($i eq 0)
	    {
		return 0;
	    }
	    else
	    {
		return -$i;
	    }
	}
    }
    if ($i <0)
    {
	$i=-$i;
    }
    if ($j <0)
    {
	$j=-$j;
    }
    while (1)
    {
	$res=CalcMod($i, $j);
	if ($res eq 0)
	{
	    $result=$j;
	    last;
	}
	else
	{
	    $i=$j;
	    $j=$res;
	}
    }
    return $result;
}

# Then we remove for all extreme rays expression the fractions
# that may be present.

while (<>)
{
    $line=$_;

    @l=split(" ", $line);
    $dimension=scalar(@l);
    # write all terms as fractions
    for ($i=1; $i<=$dimension; $i++)
    {
	@frac=split("/", $l[$i-1]);
	if (scalar(@frac) eq 1)
	{
	    $numerator[$i-1]=$frac[0];
	    $denominator[$i-1]=1;
	}
	else
	{
	    $numerator[$i-1]=$frac[0];
	    $denominator[$i-1]=$frac[1];
	}
    }
    # Do a removing of fractions
    for ($i=1; $i<=$dimension; $i++)
    {
	$F=$denominator[$i-1];
	if ($F ne 1)
	{
	    for ($j=1; $j<$i; $j++)
	    {
		$numerator[$j-1]=$numerator[$j-1]*$F;
	    }
	    $denominator[$i-1]=1;
	    for ($j=$i+1; $j<=$dimension; $j++)
	    {
		$R=$numerator[$j-1]*$F;
		$S=$denominator[$j-1];
		$G=gcd($R, $S);
		$r=$R/$G;
		$s=$S/$G;
		$numerator[$j-1]=$r;
		$denominator[$j-1]=$s;
	    }
	}
    }
    # search for common factors
    $u=$numerator[0];
    for ($i=2; $i<=$dimension; $i++)
    { 
	$u=gcd($u, $numerator[$i-1]);
    }
    # division
    for ($i=1; $i<=$dimension; $i++)
    {
	$numerator[$i-1]=$numerator[$i-1]/$u;
    }
    # And then print out the result
    for ($i=1; $i<=$dimension; $i++)
    {
	print " ".$numerator[$i-1];
    }
    print "\n";
}
